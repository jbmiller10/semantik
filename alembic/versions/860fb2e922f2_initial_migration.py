"""Initial migration

Revision ID: 860fb2e922f2
Revises: 
Create Date: 2025-07-13 01:12:45.676334

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision: str = '860fb2e922f2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Create initial database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Check if tables already exist - if they do, skip creation
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    existing_tables = inspector.get_table_names()
    
    # Create users table if it doesn't exist
    if 'users' not in existing_tables:
        op.create_table('users',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('username', sa.String(), nullable=False),
            sa.Column('email', sa.String(), nullable=False),
            sa.Column('full_name', sa.String(), nullable=True),
            sa.Column('hashed_password', sa.String(), nullable=False),
            sa.Column('is_active', sa.Boolean(), nullable=True, server_default='1'),
            sa.Column('created_at', sa.String(), nullable=False),
            sa.Column('last_login', sa.String(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('email'),
            sa.UniqueConstraint('username')
        )
        op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
        op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    
    # Create jobs table if it doesn't exist
    if 'jobs' not in existing_tables:
        op.create_table('jobs',
            sa.Column('id', sa.String(), nullable=False),
            sa.Column('name', sa.String(), nullable=False),
            sa.Column('description', sa.Text(), nullable=True),
            sa.Column('status', sa.String(), nullable=False),
            sa.Column('created_at', sa.String(), nullable=False),
            sa.Column('updated_at', sa.String(), nullable=False),
            sa.Column('directory_path', sa.String(), nullable=False),
            sa.Column('model_name', sa.String(), nullable=False),
            sa.Column('chunk_size', sa.Integer(), nullable=True),
            sa.Column('chunk_overlap', sa.Integer(), nullable=True),
            sa.Column('batch_size', sa.Integer(), nullable=True),
            sa.Column('vector_dim', sa.Integer(), nullable=True),
            sa.Column('quantization', sa.String(), nullable=True, server_default='float32'),
            sa.Column('instruction', sa.Text(), nullable=True),
            sa.Column('total_files', sa.Integer(), nullable=True, server_default='0'),
            sa.Column('processed_files', sa.Integer(), nullable=True, server_default='0'),
            sa.Column('failed_files', sa.Integer(), nullable=True, server_default='0'),
            sa.Column('current_file', sa.String(), nullable=True),
            sa.Column('start_time', sa.String(), nullable=True),
            sa.Column('error', sa.Text(), nullable=True),
            sa.Column('user_id', sa.Integer(), nullable=True),
            sa.Column('parent_job_id', sa.String(), nullable=True),
            sa.Column('mode', sa.String(), nullable=True, server_default='create'),
            sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    
    # Create files table if it doesn't exist
    if 'files' not in existing_tables:
        op.create_table('files',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('job_id', sa.String(), nullable=False),
            sa.Column('path', sa.String(), nullable=False),
            sa.Column('size', sa.Integer(), nullable=False),
            sa.Column('modified', sa.String(), nullable=False),
            sa.Column('extension', sa.String(), nullable=False),
            sa.Column('hash', sa.String(), nullable=True),
            sa.Column('doc_id', sa.String(), nullable=True),
            sa.Column('content_hash', sa.String(), nullable=True),
            sa.Column('status', sa.String(), nullable=True, server_default='pending'),
            sa.Column('error', sa.Text(), nullable=True),
            sa.Column('chunks_created', sa.Integer(), nullable=True, server_default='0'),
            sa.Column('vectors_created', sa.Integer(), nullable=True, server_default='0'),
            sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
        op.create_index('idx_files_content_hash', 'files', ['content_hash'], unique=False)
        op.create_index('idx_files_doc_id', 'files', ['doc_id'], unique=False)
        op.create_index('idx_files_job_content_hash', 'files', ['job_id', 'content_hash'], unique=False)
        op.create_index('idx_files_job_id', 'files', ['job_id'], unique=False)
        op.create_index('idx_files_status', 'files', ['status'], unique=False)
    
    # Create refresh_tokens table if it doesn't exist
    if 'refresh_tokens' not in existing_tables:
        op.create_table('refresh_tokens',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('token_hash', sa.String(), nullable=False),
            sa.Column('expires_at', sa.String(), nullable=False),
            sa.Column('created_at', sa.String(), nullable=False),
            sa.Column('is_revoked', sa.Boolean(), nullable=True, server_default='0'),
            sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('token_hash')
        )
        op.create_index(op.f('ix_refresh_tokens_token_hash'), 'refresh_tokens', ['token_hash'], unique=True)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Drop all tables."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_refresh_tokens_token_hash'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index('idx_files_status', table_name='files')
    op.drop_index('idx_files_job_id', table_name='files')
    op.drop_index('idx_files_job_content_hash', table_name='files')
    op.drop_index('idx_files_doc_id', table_name='files')
    op.drop_index('idx_files_content_hash', table_name='files')
    op.drop_table('files')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
