name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    # Run on all pull requests regardless of target branch
    # This allows CI to run on feature branch PRs (e.g., feature->develop)
    # not just PRs targeting main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    
    - name: Check code formatting with Black
      run: |
        poetry run black --check .
    
    - name: Lint with Ruff
      run: |
        poetry run ruff check .
    
    - name: Type check with Mypy
      run: |
        poetry run mypy packages/vecpipe packages/webui packages/shared --ignore-missing-imports

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    
    services:
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    
    - name: Wait for Qdrant to be ready
      run: |
        for i in {1..30}; do
          if curl -f http://localhost:6333/ 2>/dev/null; then
            echo "Qdrant is ready!"
            break
          fi
          echo "Waiting for Qdrant... ($i/30)"
          sleep 2
        done
    
    - name: Wait for Redis to be ready
      run: |
        for i in {1..30}; do
          if redis-cli -h localhost ping 2>/dev/null; then
            echo "Redis is ready!"
            break
          fi
          echo "Waiting for Redis... ($i/30)"
          sleep 2
        done
    
    - name: Run tests with pytest (excluding E2E)
      run: |
        poetry run pytest -m "not e2e" --cov=vecpipe --cov=webui --cov=shared --cov-report=xml
      env:
        QDRANT_HOST: localhost
        QDRANT_PORT: 6333
        JWT_SECRET_KEY: test-secret-key
        USE_MOCK_EMBEDDINGS: "true"
        PYTORCH_CUDA_ALLOC_CONF: "max_split_size_mb:512"
        REDIS_URL: redis://localhost:6379/0
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella