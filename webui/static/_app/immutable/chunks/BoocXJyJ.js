import{d as i,w as u,g as c}from"./qs5jqFxu.js";const g=!0,h=g;function k(){const{subscribe:n,set:s,update:a}=u({user:null,token:localStorage.getItem("access_token"),loading:!1});return{subscribe:n,login:async(o,t)=>{a(e=>({...e,loading:!0}));try{const e=await fetch("/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:o,password:t})});if(!e.ok)throw new Error("Invalid credentials");const r=await e.json();h&&(localStorage.setItem("access_token",r.access_token),localStorage.setItem("refresh_token",r.refresh_token));const l=await(await fetch("/api/auth/me",{headers:{Authorization:`Bearer ${r.access_token}`}})).json();s({user:l,token:r.access_token,loading:!1}),c("/")}catch(e){throw a(r=>({...r,loading:!1})),e}},logout:async()=>{const o=localStorage.getItem("access_token"),t=localStorage.getItem("refresh_token");if(o)try{await fetch("/api/auth/logout",{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({refresh_token:t})})}catch(e){console.error("Logout error:",e)}localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token"),s({user:null,token:null,loading:!1}),c("/login")},checkAuth:async()=>{const o=localStorage.getItem("access_token");if(!o)return!1;a(t=>({...t,loading:!0}));try{const t=await fetch("/api/auth/me",{headers:{Authorization:`Bearer ${o}`}});if(!t.ok)throw new Error("Invalid token");const e=await t.json();return a(r=>({...r,user:e,loading:!1})),!0}catch{return localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token"),s({user:null,token:null,loading:!1}),!1}},getHeaders:()=>({Authorization:`Bearer ${localStorage.getItem("access_token")}`,"Content-Type":"application/json"})}}const f=k();i(f,n=>!!n.user);export{f as a};
