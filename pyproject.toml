[tool.poetry]
name = "document-embedding-system"
version = "2.0.0"
description = "Production-ready document embedding system with Qdrant"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "vecpipe", from = "packages"}, {include = "webui", from = "packages"}, {include = "shared", from = "packages"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
qdrant-client = "^1.9.0"
sentence-transformers = "^3.0.0"
fastapi = "^0.116.0"
uvicorn = "^0.27.1"
pyarrow = "^15.0.0"
pandas = "^2.2.0"
tqdm = "^4.66.2"
httpx = "^0.27.0"
tiktoken = "^0.5.0"
prometheus-client = "^0.19.0"
psutil = "^5.9.0"
gputil = "^1.4.0"
pypdf = "^5.0.0"
python-docx = "^1.1.0"
websockets = "^11.0.3"
unstructured = {extras = ["all-docs"], version = "^0.18.1"}
python-multipart = "^0.0.18"
python-dotenv = "^1.0.1"
torch = "*"
transformers = "^4.51.0"
bitsandbytes = "^0.46.0"
accelerate = ">=0.26.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pyjwt = {extras = ["crypto"], version = "^2.10.1"}
email-validator = "^2.1.0"
numpy = "<2"
pydantic-settings = "^2.10.1"
slowapi = "^0.1.9"
pptx2md = "^0.7.2"
questionary = "^2.0.1"
rich = "^13.0.0"
alembic = "^1.13.1"
sqlalchemy = "^2.0.23"
psycopg2-binary = "^2.9.9"
celery = {extras = ["redis"], version = "^5.3.0"}
redis = "^5.0.0"
flower = "^2.0.0"
asyncpg = "^0.30.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.1.0"
ruff = "^0.2.0"
mypy = "^1.8.0"
black = "^24.2.0"
isort = "^5.13.0"
types-requests = "^2.31.0"
types-redis = "^4.6.0"
pyfakefs = "^5.3.0"
websocket-client = "^1.8.0"

[tool.poetry.group.e2e]
optional = true

[tool.poetry.group.e2e.dependencies]
pytest-playwright = "^0.6.2"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function call in argument defaults (needed for FastAPI)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["ARG002"]  # Allow unused fixture arguments in tests

[tool.black]
line-length = 120
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov=packages.vecpipe --cov=packages.webui --cov-report=html --cov-report=term --cov-report=xml"
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "e2e: End-to-end tests that require a running instance (deselect with '-m \"not e2e\"')",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
